/tmp/img - 

tmp/img

d m 1
d f 1
a m 0
a f 1

enquanto block > -3 e str != '\0'
	findcluster
se estiver tentando criar a raiz (loucura isso viu)
	se a raiz ja estiver pronta
		retorne erro
	se nao
		cria a raiz
se nao existir o arquivo
		se for na raiz
			aponta o ponteiro para root_dir
		se nao for na raiz
			aponta o ponteiro para um dir qualquer
		se houver espaço
			crie o diretorio
		se nao 
			retorne erro
se existir o arquivo
	se ele for um diretorio
		retorne erro
	se ele for um arquivo
		se houver espaço
			crie o diretorio
		se nao 
			retorne erro
			
// 0 1 2 3 4
//		 4 5
// h o m e \0

t m p / v a r / / /  \0
0 1 2 3 4 5 6 7 8 9  11
		 		  10
t m p / v a r
0 1 2 3 4 5 6
			7


t m p / v a r
0 1 2 3 4 5 6
			6

t m p / v a r
0 1 2 3 4 5 6
	  3	    6

t m p / v a r
0 1 2 3 4 5 6
	    4   6
	    
len >= 0 && str[len] == / || len == -1

len > 0 && str[len]

PAREI DEPOIS DE TERMINAR A FUNÇÃO LAST_TOKEN, FAZENDO A FUNÇÃO CREATE_DIR.

void persist_on_disk(void *data, int size_data, int block){

	FILE *ptr_file =fopen(fat_name, "r+b");
	fseek(ptr_file, block, SEEK_SET);
	if(!fwrite(ptr_file, size_data, 1, data)){
		perror("persist_on_disk");
	}
	fclose(ptr_file);
}

create_file

se o caminho para o novo arquivo for válido
	se nao existir arquivo com o mesmo nome
		se for criar um arquivo na raiz
			entao retorne root_dir
		se nao 
			retorne whatever
		se existir entradas válidas
			se existir espaço em disco
				entao cria o arquivo
			se nao
				retorne erro (sem espaço em disco).
		se nao 
			retorne erro (sem entradas disponívies).
	se nao entao
		retorne erro (arquivo já existe)
se nao 
	retorne erro (impossível atingir tal diretório)
	
write
se existir espaço no disco para o arquivo
	salve os blocos livres
	chama a função create_file
	se o arquivo foi criado
		escreva nele.
se nao
	retorna erro (nao há espaço livre em disco suficiente).
	

enquanto nao achar aspas duplas "
	se achar aspas
	find_text(i)

int find_text (indice)
	enquanto nao achar as aspas de fechar
	se achar aspas de fechar 
		retorne i
	incrementa o i
	retorne -1

se a o len da string ainda couber no disco.
	se o arquivo existe
		se o final do arquivo bater com o final de seu último bloco.
			procurar novos blocos necessários
			atualizar a fat
			persista a string e a fat.
		se nao
			se a string couber no utlimo bloco
				persista a string
			se nao
				persista ate onde der
				poracurar novos blocos
				atualizar a fat (alterar o
					valor do endereçço do então último bloco).
				peristir disco e fat
	se nao
		chama o write na integra
se nao
	retorne erro (limite do disco atingido).
	
read
	se o arquivo existir
		se ele não for um diretório
			leia ate o ultimo bloco do arquivo
		se ele for um diretorio
			retorne erro (arquivo é um diretório)
se nao
	retorne erro (arquivo inexistente).


unlink
	se o arquivo existir
		se este for um diretório
			se ele estiver vazio
				apague
			se nao
				retorne erro (diretório nao vazio)
		se nao
			apague
	se nao 
		o arquivo nao exisite

